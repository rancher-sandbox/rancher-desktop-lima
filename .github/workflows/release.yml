name: Release

on:
  push:
    tags:
    - 'v*.rd*'
    - 'test-v*.rd*'
  pull_request:
  workflow_dispatch:

env:
  GO111MODULE: on

jobs:
  build:
    strategy:
      matrix:
        include:
        - { os: macos-15, arch: arm64 }
        - { os: macos-15, arch: amd64 }
        - { os: ubuntu-22.04, arch: amd64 }
        - { os: windows-latest, arch: amd64 }
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
    - name: Force LF line endings in git checkout
      if: runner.os == 'Windows'
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
        submodules: recursive
    - uses: actions/setup-go@v4
      with:
        go-version-file: lima/go.mod
        cache-dependency-path: lima/go.sum
    - name: Install sha512sum
      if: runner.os == 'macOS'
      run: brew install coreutils
    - name: Build lima tarball
      shell: bash
      env:
        OS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      working-directory: lima
      run: |
        set -x
        ARCH=${GOARCH/amd64/x86_64}
        ARCH=${ARCH/arm64/aarch64}
        GUESTAGENT="_output/share/lima/lima-guestagent.Linux-${ARCH}"

        make clean exe "$GUESTAGENT"
        find _output -type f -exec file {} \;

        TARBALL="lima.${OS/ubuntu-*/linux}.${GOARCH}.tar.gz"
        tar cfvz "$TARBALL" -C _output ./
        sha512sum "$TARBALL" >"${TARBALL}.sha512sum"
    - uses: actions/upload-artifact@v4
      with:
        name: lima.${{ matrix.os }}-${{ matrix.arch }}
        path: lima/lima.*
        if-no-files-found: error

  release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: "Create release"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="${GITHUB_REF##*/}"
        gh release create "$TAG" --draft --notes "$TAG" lima.*/*
